{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleList/PeopleList.tsx","api.ts","helpers.ts","pages/PeoplePage.tsx","pages/PageNotFound.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","linkText","className","isActive","classNames","NavBar","role","HomePage","Loader","PersonLink","person","slug","sex","name","PeopleList","people","useParams","selectedPersonSlug","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","map","born","died","fatherName","motherName","mother","father","hover","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","headers","get","includes","json","reject","Error","status","statusText","getPersonParents","personFather","find","parent","personMother","PeoplePage","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","loadPeopleFromServer","peopleFromServer","peopleWithParents","useEffect","length","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e60af4b7.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  linkText: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, linkText }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n    >\n      {linkText}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" linkText=\"Home\" />\n        <PageNavLink to=\"people\" linkText=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { PersonLink } from '../PersonLink';\n\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[];\n};\n\ntype Params = {\n  slug?: string;\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { slug: selectedPersonSlug = '' } = useParams<Params>();\n\n  return (\n    <TableContainer\n      component={Paper}\n    >\n      <Table\n        data-cy=\"peopleTable\"\n        size=\"small\"\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Sex</TableCell>\n            <TableCell>Born</TableCell>\n            <TableCell>Died</TableCell>\n            <TableCell>Mother</TableCell>\n            <TableCell>Father</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {people.map(person => {\n            const {\n              sex,\n              born,\n              died,\n              fatherName,\n              motherName,\n              mother,\n              father,\n              slug,\n            } = person;\n\n            return (\n              <TableRow\n                data-cy=\"person\"\n                className={classNames({\n                  'has-background-warning': selectedPersonSlug === slug,\n                })}\n                hover\n                key={slug}\n              >\n                <TableCell>\n                  <PersonLink person={person} />\n                </TableCell>\n\n                <TableCell>{sex}</TableCell>\n                <TableCell>{born}</TableCell>\n                <TableCell>{died}</TableCell>\n\n                <TableCell>\n                  {mother && (\n                    <PersonLink person={mother} />\n                  )}\n\n                  {(!mother && motherName)\n                    ? motherName\n                    : '-'}\n                </TableCell>\n\n                <TableCell>\n                  {father && (\n                    <PersonLink person={father} />\n                  )}\n\n                  {(!father && fatherName)\n                    ? fatherName\n                    : '-'}\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`),\n        );\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return Promise.reject(new Error('Content-type is not supported'));\n      }\n\n      return response.json();\n    });\n}\n","import { Person } from './types';\n\nexport const getPersonParents = (person: Person, people: Person[]): Person => {\n  const { fatherName, motherName } = person;\n\n  const personFather = people.find(\n    parent => parent.name === fatherName,\n  );\n\n  const personMother = people.find(\n    parent => parent.name === motherName,\n  );\n\n  return {\n    ...person,\n    father: personFather,\n    mother: personMother,\n  };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Loader } from '../components/Loader';\nimport { PeopleList } from '../components/PeopleList/PeopleList';\n\nimport { getPeople } from '../api';\n\nimport { Person } from '../types/Person';\n\nimport { getPersonParents } from '../helpers';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const loadPeopleFromServer = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n      const peopleWithParents: Person[] = peopleFromServer.map(\n        person => getPersonParents(person, peopleFromServer),\n      );\n\n      setPeople(peopleWithParents);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div>\n          {isLoading && (\n            <Loader />\n          )}\n\n          {(!isLoading && hasError) && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !hasError && people.length === 0) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(!isLoading && !hasError && people.length > 0) && (\n            <PeopleList people={people} />\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}